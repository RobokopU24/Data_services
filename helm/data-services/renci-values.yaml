# Values for running data-services on Sterling at RENCI

replicaCount: 1

dataServices:
  graphID: "RuleMiningRobokop"
  # optionally use a remote graph spec by supplying a url
  graphSpec: 'https://stars.renci.org/var/data_services/graph_specs/rule-mining.yml'
  # graphSpec: 'default-graph-spec.yml'
  # useLocalGraphSpec true if the graphSpec is a file in the codebase (mainly for testing), false if a remote URL
  useLocalGraphSpec: false
  buildMode: true
  image:
    repository: ghcr.io/robokopu24/orion
    pullPolicy: IfNotPresent
  # tag: neo4j-5-testing
    tag: v1.0.9
  graphsVolume:
    use_nfs: true
    nfs_server: na-projects.edc.renci.org
    nfs_path: /stars/Data_services
    nfs_mount_subpath: biolink3/graphs/
  sourcesVolume:
    use_nfs: true
    nfs_server: na-projects.edc.renci.org
    nfs_path: /stars/Data_services
    nfs_mount_subpath: biolink3/storage/
  extraVolume:
    use_extra_volume: true
    nfs_server: na-projects.edc.renci.org
    nfs_path: /stars/var/
    nfs_mount_subpath: plater/
  neo4jScratchVolume:
    size: 70Gi
  resources:
    limits:
      cpu: "2500m"
      memory: 40Gi
      ephemeral-storage: 2Gi
    requests:
      cpu: "2500m"
      memory: 32Gi
      ephemeral-storage: 1Gi
  securityContext:
    runAsUser: 30000
    runAsGroup: 1000
  normalization:
    nodeNormEndpoint: https://nodenormalization-sri.renci.org/
    edgeNormEndpoint: https://bl-lookup-sri.renci.org/
  outputURL: https://stars.renci.org/var/plater/bl-3.4.3/

pharos:
  host: pod-host-or-ip
  port: 3306
  user: ds-user
  password: ds-pass
  db_name: PHAROS

drugcentral:
  host: pod-host-or-ip
  port: 5432
  user: dc-user
  password: dc-pass
  db_name: drugcentral

